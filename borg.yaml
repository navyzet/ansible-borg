- hosts: all
  gather_facts: no

  vars:
    #borg_ip: 

  tasks:

  - name: "Генерация ключа ssh"
    user: name="root"
          generate_ssh_key="yes"
          ssh_key_file="/root/.ssh/id_rsa"

  - name: "Получить ключ машины"
    shell: "cat /root/.ssh/id_rsa.pub"
    register: local_id_rsa_pub
    check_mode: no
    ignore_errors: "{{ ansible_check_mode }}"

  - name: "Создание папки пользователя"
    file: path=/backup/{{ group_names[0] }}
          state=directory
          recurse=yes
          owner='{{ group_names[0] }}'
          group='{{ group_names[0] }}'
    delegate_to: "{{ backup_server | default('borg') }}"

  - name: "Создание пользователя на хранилеще бэкапов"
    user: name={{ group_names[0] }}
          home="/backup/{{ group_names[0] }}"
          shell="/bin/bash"
          append=yes
    delegate_to: "{{ backup_server | default('borg') }}"
    ignore_errors: "{{ ansible_check_mode }}"

  - name: "Добавление rsa ключа машины в хранилище бэкапов"
    authorized_key: user={{ group_names[0] }}
                    key={{ local_id_rsa_pub.stdout }}
    delegate_to: "{{ backup_server | default('borg') }}"
    ignore_errors: "{{ ansible_check_mode }}"

  - name: "Add ppa borg-backup"
    apt_repository:
      repo: 'ppa:costamagnagianfranco/borgbackup'

  - name: "Install borg"
    apt:
      name: borgbackup
      update_cache: yes

  - name: Add fingerprint
    shell: ssh-keyscan -t rsa {{ borg_ip }} >> ~/.ssh/known_hosts

  - name: list repo
    shell: borg list {{ group_names[0] }}@{{ borg_ip }}:$(hostname)
    register: listrepo
    ignore_errors: True

  - name: init repo
    shell: borg init --encryption=none {{ group_names[0] }}@{{ borg_ip }}:$(hostname)
    when: listrepo.rc != 0
